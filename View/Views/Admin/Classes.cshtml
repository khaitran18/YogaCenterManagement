@using View.Models.Response;
@model View.Models.PaginatedResult<ClassDto>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<partial name="_Notification"/>
<div class="row">
    <div class="col-md-12">
        <!-- WELCOME-->
        <section class="welcome p-t-10">
            <div class="container">
                <div class="row">
                    <div class="col-md-12">
                        <h1 class="title-4">
                            Manage Classes
                        </h1>
                        <hr>
                    </div>
                </div>
            </div>
        </section>
        <!-- END WELCOME-->
        <!-- CREATE CLASS WITH SCHEDULE MODAL -->
        <div class="modal fade overflow-auto" id="myModal" data-backdrop="false">
        <div class="modal-dialog">
            <div class="modal-content">
                <!-- Modal Header -->
                <div class="modal-header">
                    <h4 class="modal-title">Create class</h4>
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                </div>

                <!-- Modal Body -->
                <div class="modal-body">
                    <form asp-controller="Admin" asp-action="Classes" method="post" id="create-class" enctype="multipart/form-data">
                        <div class="mb-2 mx-5 text-start  align-items-center justify-content-center">
                            <div class="mx-2">
                                <p class="font-weight-bold">Class Name:<p />
                                <input type="text" id="class-name" name="ClassName" class="ml-3 border"/>
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">Class Capacity:<p />
                                <input type="number" id="class-capacity" name="ClassCapacity" class="ml-3 border" />
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">Price:<p />
                                <input type="number" id="price" name="Price" class="ml-3 border" />
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">Description:<p />
                                <textarea id="description" name="Description" class="ml-3 border"></textarea>
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">Image:<p />
                                <input type="file" id="image" name="Image" class="ml-3 border"/>
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">Start Date:<p />
                                <input type="date" id="start-date" name="StartDate" class="ml-3 border" />
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">End Date:<p />
                                <input type="date" id="end-date" name="EndDate" class="ml-3 border" />
                            </div>
                            <div class="mx-2">
                                <p class="font-weight-bold">Select the study slot:<p />
                                <select id="selectSlot" name="SlotId">
                                    <option value="" selected>None</option>
                                </select>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary" form="create-class">Create class</button>
                </div>

            </div>
        </div>
        </div>
        <!-- Update modal-->
        <div class="modal fade overflow-auto" id="updateModal" data-backdrop="false">
          <div class="modal-dialog modal-lg">
            <div class="modal-content">
                <!-- Modal header-->
              <div class="modal-header">
                <h5 class="modal-title" id="updateModalLabel">Update Class</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                  <span aria-hidden="true">&times;</span>
                </button>
              </div>
              <!-- Modal body-->
              <div class="modal-body">
                <!-- Class basic information-->
                <div id="basicInfoSection">
                  <h6>Basic Information</h6>
                  <form id="basicInfoForm">
                    <input type="hidden" id="update-class-id" name="classId" style="display: none;"/>
                    <div class="form-group">
                      <label for="className">Class Name</label>
                      <input type="text" class="form-control" id="update-class-name" name="className">
                    </div>
                    <div class="form-group">
                      <label for="price">Price</label>
                      <input type="number" class="form-control" id="update-price" name="price">
                    </div>
                    <div class="form-group">
                      <label for="capacity">Capacity</label>
                      <input type="number" class="form-control" id="update-capacity" name="classCapacity">
                    </div>
                    <div class="form-group">
                      <label for="description">Description</label>
                      <textarea class="form-control" id="update-description" name="description" rows="3"></textarea>
                    </div>
                    <div class="form-group">
                      <label for="image">Image</label>
                      <input type="file" class="form-control-file" id="update-image" name="image">
                    </div>
                    <button type="submit" class="btn btn-outline btn-primary">Update Info</button>
                  </form>
                </div>
                <!-- Lecturer -->
                <div id="lecturerInfoSection">
                  <h4>Lecturer Information:</h4>
                  <form id="lecturerForm">
                    <h5>Id: <span id="lecturerId" class="font-weight-normal"></span></h5>
                    <h5 id="lecturer-name"></h5>
                    <p id="lecturer-email"></p>
                    <p class="mt-1 text-dark font-weight-bold"> Assign new lecturer: </p>
                    <input type="hidden" id="assignClassId" name="classId" style="display: none;"/>
                    <select id="lecturer" name="lecturerId" >
                        <option value="0">None</option>
                    </select>
                    <button type="submit" id="assignLecturerBtn" class="btn btn-outline btn-success">Assign Lecturer</button>
                  </form>
                <!--Schedule -->
                <div id="studySlotsSection">
                  <h6>Class Schedule</h6>
                  <ul id="studySlotsList"></ul>
                </div>
              </div>
            </div>
          </div>
        </div>
    </div>

    

        <!-- DATA TABLE -->
        <h3 class="title-5 m-b-35">data table</h3>
        <!-- Filter/sort -->
        <div class="table-data__tool">
            <div class="table-data__tool-left">
                <!-- Sort by -->
                <div class="rs-select2--light rs-select2--md">
                    <select class="js-select2 filter-select" id="sortBySelect">
                        <option value="">Sort by</option>
                        <option value="classname">Name (A-Z)</option>
                        <option value="classname_desc">Name (Z-A)</option>
                        <option value="price">Price (Low to High)</option>
                        <option value="price_desc">Price (High to Low)</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <!-- Filter by startingFromDate -->
                <div class="rs-select2--light rs-select2--md">
                    <input type="text" onfocus="(this.type='date')" onblur="(this.type='text')" class="form-control au-input" id="startingFromDateInput" placeholder="Starting From" />
                </div>
                <!-- Filter by durationMonths -->
                <div class="rs-select2--light rs-select2--md">
                    <input type="number" class="form-control au-input" id="durationMonthsInput" placeholder="Durations" />
                </div>
                <!-- Filter by classCapacity -->
                <div class="rs-select2--light rs-select2--md">
                    <select class="js-select2 filter-select" id="classCapacitySelect">
                        <option value="">Class Capacity</option>
                        <option value="lt15">&lt;15</option>
                        <option value="15-25">15-25</option>
                        <option value="gt25">&gt;25</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <!-- Search -->
                <form method="get" class="search-form rs-select2--dark" asp-controller="Admin" asp-action="Classes">
                    <div class="input-group">
                        <input class="au-input" type="text" name="searchKeyword" placeholder="Search by Class Name" />
                        <button class="au-btn--submit" type="submit">
                            <i class="zmdi zmdi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
            <div class="table-data__tool-right">
                <button class="au-btn au-btn-icon au-btn--green au-btn--small" data-toggle="modal" data-target="#myModal">
                    <i class="zmdi zmdi-plus"></i>create new
                </button>
            </div>
        </div>
        <!-- End filter/sort -->
        <div class="table-responsive table-responsive-data2">
            <table class="table table-data2">
                <thead>
                    <tr>
                        <th>Class Name</th>
                        <th>Start Date</th>
                        <th>End Date</th>
                        <th>Price</th>
                        <th>Class Capacity</th>
                        <th>Lecturer</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var classItem in Model.Items)
                    {
                        <tr class="tr-shadow">
                            <td>@classItem.ClassName</td>
                            <td>@classItem.StartDate.ToString("MM/dd/yyyy")</td>
                            <td>@classItem.EndDate.ToString("MM/dd/yyyy")</td>
                            <td>@classItem.Price</td>
                            <td>@classItem.ClassCapacity</td>
                            <td>@(classItem.Lecturer != null ? classItem.Lecturer.FullName : "N/A")</td>
                            <td>
                                <div class="table-data-feature">
                                    <button class="item edit-class-btn" data-class-id='@classItem.ClassId' data-placement="top" title="Edit">
                                        <i class="zmdi zmdi-edit"></i>
                                    </button>
                                    @*<button class="item" data-toggle="tooltip" data-placement="top" title="Delete">
                                        <i class="zmdi zmdi-delete"></i>
                                    </button>*@
                                    <div class="dropdown">
                                        <button class="item" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <i class="zmdi zmdi-more"></i>
                                        </button>
                                        <div class="dropdown-menu dropdown-menu-right">
                                            <a class="dropdown-item" href="@Url.Action("ClassDetails", "Admin", new { classId = classItem.ClassId })">
                                                View Details
                                            </a>
                                        </div>
                                    </div>
                                </div>
                            </td>
                        </tr>
                        <tr class="spacer"></tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- PAGING NAVIGATION -->
        <nav>
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@(ViewBag.QueryString)&page=@(Model.Page - 1)">&lt</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Page ? "active" : "")">
                        <a class="page-link" href="@(ViewBag.QueryString)&page=@i">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@(ViewBag.QueryString)&page=@(Model.Page + 1)">&gt</a>
                    </li>
                }
            </ul>
        </nav>
        <!-- END PAGING NAVIGATION -->
    </div>
</div>

@section Scripts {
<script>
    $(document).ready(function () {
        var searchKeywordParam = '@Context.Request.Query["searchKeyword"]';
        var sortByParam = '@Context.Request.Query["sortBy"]';
        var startingFromDateParam = '@Context.Request.Query["startingFromDate"]';
        var durationMonthsParam = '@Context.Request.Query["durationMonths"]';
        var classCapacityParam = '@Context.Request.Query["classCapacity"]';

        if (sortByParam) {
            $('#sortBySelect').val(sortByParam).trigger('change');
        }

        if (startingFromDateParam) {
            $('#startingFromDateInput').val(startingFromDateParam);
        }

        if (durationMonthsParam) {
            $('#durationMonthsInput').val(durationMonthsParam);
        }

        if (classCapacityParam) {
            $('#classCapacitySelect').val(classCapacityParam).trigger('change');
        }

        if (searchKeywordParam) {
            $('[name="searchKeyword"]').val(searchKeywordParam);
        }

        $('#sortBySelect, #startingFromDateInput, #durationMonthsInput, #classCapacitySelect').change(function () {
            applyFilters();
        });

        function applyFilters() {
            var sortBy = $('#sortBySelect').val();
            var startingFromDate = $('#startingFromDateInput').val();
            var durationMonths = $('#durationMonthsInput').val();
            var classCapacity = $('#classCapacitySelect').val();
            var searchKeyword = $('[name="searchKeyword"]').val();

            var url = '@Url.Action("Classes", "Admin")';

            var params = [];
            if (sortBy) {
                params.push('sortBy=' + sortBy);
            }
            if (startingFromDate) {
                params.push('startingFromDate=' + startingFromDate);
            }
            if (durationMonths) {
                params.push('durationMonths=' + durationMonths);
            }
            if (classCapacity) {
                params.push('classCapacity=' + classCapacity);
            }
            if (searchKeyword) {
                params.push('searchKeyword=' + encodeURIComponent(searchKeyword));
            }

            if (params.length > 0) {
                url += '?' + params.join('&');
            }

            window.location.href = url;
        }
        //fetch study slot
        $.ajax({
          url: 'https://localhost:7241/api/Class/slot',
          method: 'GET',
          dataType: 'json',
          headers: {
            'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI'
          },
          success: function(data) {
            const selectSlot = $('#selectSlot');
            console.log(data.result);
            // Loop through the sections and create options with custom content
            $.each(data.result, function(index, slot) {
                //days of slot
                const days = slot.day.map(item => item.day);
                const str = days.join(",");
              // Create an option element with custom content
              const option = $('<option></option>')
                .attr('value', slot.slotId)
                .html('<strong>' + slot.startTime + " - " + slot.endTime + '</strong>: ' + str);

              // Append the option to the select element
              selectSlot.append(option);
            });
          },
          error: function(jqXHR, textStatus, errorThrown) {
            console.log('Error fetching study slots:', errorThrown);
          }
        });
        //fetch lecturer list
        $.ajax({
          url: 'https://localhost:7241/api/User?RoleId=2',
          method: 'GET',
          dataType: 'json',
          headers: {
            'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI'
          },
          success: function(data) {
            const select = $('#lecturer');
            console.log(data.result);
            // Loop through the sections and create options with custom content
            $.each(data.result.items, function(index, lec) {
              // Create an option element with custom content
              const option = $('<option></option>')
                .attr('value', lec.uid)
                .html('<strong>' + lec.fullName + '</strong> ');
              // Append the option to the select element
              select.append(option);
            });
          },
          error: function(jqXHR, textStatus, errorThrown) {
            console.log('Error fetching lecturers:', errorThrown);
          }
        });

        $('.edit-class-btn').on('click', function() {
            var classId = $(this).data('class-id');
            openUpdateModal(classId);
        });

        $('#basicInfoForm').on('submit', function(event) {
          event.preventDefault();
          var formData = new FormData(this);
          updateBasicInfo(formData);
        }); 
        
        $('#lecturerForm').on('submit', function(event) {
          event.preventDefault();
          var formData = $(this).serializeArray();
          assignLecturer(formData);
        }); 

        //$('#assignLecturerBtn').on('click', function() {
        //    var classId = $('#assignClassId').val();
        //    var lecturerId = $('#lecturer').val();
        //    assignLecturer(lecturerId,classId);
        //});



    });
        //fetch data for update modal
        function openUpdateModal(classId) {
            $.ajax({
                url: 'https://localhost:7241/api/Class/' + classId,
                method: 'GET',
                dataType: 'json',
                headers: {
                    'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI'
                },    
                success: function(data) {
                    // Populate basic information section
                    $('#update-class-id').val(data.result.classId);
                    $('#update-class-name').val(data.result.className);
                    $('#update-price').val(data.result.price);
                    $('#update-capacity').val(data.result.classCapacity);
                    $('#update-description').val(data.result.description);
                    $('#assignClassId').val(data.result.classId);

                    // Populate lecturer information
                    if(data.result.lecturer != null){
                    $('#lecturer').val(data.result.lecturer.uid);
                    $('#lecturerId').text(data.result.lecturer.uid);
                    $('#lecturer-name').text(data.result.lecturer.fullName);
                    $('#lecturer-email').html("<span class=\"font-weight-bold text-dark\">Email: </span>"+data.result.lecturer.email);
                    }
                    
                    //show the modal
                    $('#updateModal').modal('show');
                },
                error: function(jqXHR, textStatus, errorThrown) {
                    console.log('Error fetching class data:', errorThrown);
                }
            });
        }

        function assignLecturer(formData) {
            var formDataJSON = {};
            $.each(formData, function() {
                formDataJSON[this.name] = this.value;
            });
            formDataJSON['token'] = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI';
            $.ajax({
              url: 'https://localhost:7241/api/Class/assignLecturer',
              method: 'POST',
              contentType: 'application/json',
              headers: {
                    'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI'
              },
              data: JSON.stringify(formDataJSON),
              success: function(response) {
                console.log('Lecturer assigned successfully');
                location.reload();
              },
              error: function(jqXHR, textStatus, errorThrown) {
                console.log('Error assigning lecturer:', errorThrown);
                location.reload();
              }
            });
          }

          function updateBasicInfo(formData) {
            formData.append('token','eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI');
            console.log(formData);
            $.ajax({
              url: 'https://localhost:7241/api/Class/',
              method: 'PUT',
              data: formData,
              processData: false,
              contentType: false,
              headers: {
                    'Authorization': 'Bearer ' + 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJ0aGluaG5ndHJpIiwianRpIjoiMjMiLCJ1c2VybmFtZSI6InRoaW5obmd0cmkiLCJodHRwOi8vc2NoZW1hcy5taWNyb3NvZnQuY29tL3dzLzIwMDgvMDYvaWRlbnRpdHkvY2xhaW1zL3JvbGUiOiJBZG1pbiIsImV4cCI6MTY5MTA2NDI2NywiaXNzIjoiand0IiwiYXVkIjoiand0In0.iUrZf1nljXt0dTTQymlLyBXsY1b6Dho0e8wY2rfVKLI'
              },
              success: function(response) {
                console.log('Basic info updated successfully');
                $('#updateModal').modal('hide');
                location.reload();
              },
              error: function(jqXHR, textStatus, errorThrown) {
                console.log('Error updating basic info:', errorThrown);
                $('#updateModal').modal('hide');
              }
            });
          }
</script>
}