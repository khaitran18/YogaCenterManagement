@using View.Models.Response;
@using View.Models.Enum;
@model View.Models.PaginatedResult<UserDto>
@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<div class="row">
    <div class="col-md-12">
        <!-- DATA TABLE -->
        <h3 class="title-5 m-b-35">user management</h3>
        <!-- Filter/sort -->
        <div class="table-data__tool">
            <div class="table-data__tool-left">
                <!-- Role filter -->
                <div class="rs-select2--light rs-select2--sm">
                    <select class="js-select2 filter-select" id="roleIdSelect">
                        <option value="">All Roles</option>
                        @foreach (var role in Enum.GetValues(typeof(Role)))
                        {
                            <option value="@((int)role)">@role</option>
                        }
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <!-- Status filter -->
                <div class="rs-select2--light rs-select2--sm">
                    <select class="js-select2 filter-select" id="statusSelect">
                        <option value="">All Status</option>
                        <option value="False">Active</option>
                        <option value="True">Inactive</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <!-- Sort by name -->
                <div class="rs-select2--light rs-select2--md">
                    <select class="js-select2 filter-select" id="sortByNameSelect">
                        <option value="">Sort by Name</option>
                        <option value="name">A-Z</option>
                        <option value="name_desc">Z-A</option>
                    </select>
                    <div class="dropDownSelect2"></div>
                </div>
                <form method="get" class="search-form rs-select2--dark" asp-controller="Admin" asp-action="Users">
                    <div class="input-group">
                        <input class="au-input" type="text" name="searchKeyword" placeholder="Search by Name" />
                        <button class="au-btn--submit" type="submit">
                            <i class="zmdi zmdi-search"></i>
                        </button>
                    </div>
                </form>
            </div>
            <div class="table-data__tool-right">
                <button class="au-btn au-btn-icon au-btn--green au-btn--small">
                    <i class="zmdi zmdi-plus"></i>create new
                </button>
            </div>
        </div>
        <!-- End filter/sort -->
        <div class="table-responsive table-responsive-data2">
            <table class="table table-data2">
                <thead>
                    <tr>
                        <th>Full Name</th>
                        <th>Email</th>
                        <th>Address</th>
                        <th>Phone</th>
                        <th>Status</th>
                        <th>Role</th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model.Items)
                    {
                        <tr class="tr-shadow">
                            <td>@user.FullName</td>
                            <td>
                                <span class="block-email">@user.Email</span>
                            </td>
                            <td class="desc">@user.Address</td>
                            <td>@user.Phone</td>
                            <td>
                                <span class="@(user.IsDisabled ? "status--denied" : "status--process")">
                                    @(user.IsDisabled ? "Inactive" : "Active")
                                </span>
                            </td>
                            <td>@Enum.GetName(typeof(Role), user.RoleId!)</td>
                            <td>
                                <div class="table-data-feature">
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="Edit">
                                        <i class="zmdi zmdi-edit"></i>
                                    </button>
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="Delete">
                                        <i class="zmdi zmdi-delete"></i>
                                    </button>
                                    <button class="item" data-toggle="tooltip" data-placement="top" title="More">
                                        <i class="zmdi zmdi-more"></i>
                                    </button>
                                </div>
                            </td>
                        </tr>
                        <tr class="spacer"></tr>
                    }
                </tbody>
            </table>
        </div>
        <!-- PAGING NAVIGATION -->
        <nav>
            <ul class="pagination">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@(ViewBag.QueryString)&page=@(Model.Page - 1)">&lt</a>
                    </li>
                }

                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.Page ? "active" : "")">
                        <a class="page-link" href="@(ViewBag.QueryString)&page=@i">@i</a>
                    </li>
                }

                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" href="@(ViewBag.QueryString)&page=@(Model.Page + 1)">&gt</a>
                    </li>
                }
            </ul>
        </nav>
        <!-- END PAGING NAVIGATION -->
    </div>
</div>

@section Scripts{
<script>
    $(document).ready(function () {
        var searchKeywordParam = '@Context.Request.Query["searchKeyword"]';
        var roleIdParam = '@Context.Request.Query["roleId"]';
        var statusParam = '@Context.Request.Query["isDisabled"]';
        var sortParam = '@Context.Request.Query["sortBy"]';

        if (roleIdParam) {
            $('#roleIdSelect').val(roleIdParam).trigger('change');
        }

        if (statusParam) {
            $('#statusSelect').val(statusParam).trigger('change');
        }

        if (sortParam) {
            $('#sortByNameSelect').val(sortParam).trigger('change');
        }

        if (searchKeywordParam) {
            $('[name="searchKeyword"]').val(searchKeywordParam);
        }

        $('#roleIdSelect, #statusSelect, #sortByNameSelect').change(function () {
            applyFilters();
        });

        function applyFilters() {
            var roleId = $('#roleIdSelect').val();
            var status = $('#statusSelect').val();
            var sortBy = $('#sortByNameSelect').val();
            var searchKeyword = $('[name="searchKeyword"]').val();

            var url = '@Url.Action("Users", "Admin")';

            var params = [];
            if (roleId) {
                params.push('roleId=' + roleId);
            }
            if (status) {
                params.push('isDisabled=' + status);
            }
            if (sortBy) {
                params.push('sortBy=' + sortBy);
            }
            if (searchKeyword) {
                params.push('searchKeyword=' + encodeURIComponent(searchKeyword));
            }

            if (params.length > 0) {
                url += '?' + params.join('&');
            }

            window.location.href = url;
        }
    });
</script>
}